{"version":3,"sources":["app/application.js","app/collections/user_list.js","app/initialize.js","app/lib/base_view.js","app/lib/view_collection.js","app/lib/view_helper.js","app/models/user.js","app/router.js","app/views/count_user_list_view.js","app/views/count_user_row_view.js","app/views/count_view.js","app/views/home_view.js","app/views/templates/count.jade","app/views/templates/count_user_list.jade","app/views/templates/count_user_row.jade","app/views/templates/home.jade"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAtBA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArBA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjFA;AAAA;ACAA;AAAA;AACA;AADA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlCA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAdA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAxBA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA7BA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAAA","file":"public/javascripts/app.js","sourcesContent":["var UserList = require('collections/user_list');\n\n// Application bootstrapper.\nvar Application = {\n  initialize: function () {\n\tvar Router = require('./router');\n\n    // Ideally, initialized classes should be kept in controllers & mediator.\n    // If you're making big webapp, here's more sophisticated skeleton\n    // https://github.com/paulmillr/brunch-with-chaplin\n\n\n\tthis.router = new Router();\n\n\n    if (typeof Object.freeze === 'function') {\n      Object.freeze(this);\n    }\n  }\n};\n\nmodule.exports = Application;\n","var User = require('../models/user');\n\nvar UserList = Backbone.Collection.extend({\n\tmodel: User,\n\turl: 'userlist',\n\n});\n\nmodule.exports = UserList;\n","var application = require('application');\n\n$(function () {\n  application.initialize();\n  Backbone.history.start();\n});\n","require('lib/view_helper');\n\n// Base class for all views.\nvar BaseView = Backbone.View.extend({\n  initialize: function () {\n    this.render = _.bind(this.render, this);\n  },\n\n  template: function () { return null; },\n  getRenderData: function () { return null; },\n\n  render: function () {\n    this.$el.html(this.template(this.getRenderData()));\n    this.afterRender();\n    return this;\n  },\n\n  afterRender: function () { return null; }\n});\n\nmodule.exports = BaseView;\n","\nvar BaseView = require('./base_view');\n\n/*\n   View that display a collection of subitems\n   used to DRY views\n   Usage : new ViewCollection(collection:collection)\n   Automatically populate itself by creating a itemView for each item\n   in its collection\n\n   can use a template that will be displayed alongside the itemViews\n\n   itemView       : the Backbone.View to be used for items\n   itemViewOptions : the options that will be passed to itemViews\n   collectionEl : the DOM element's selector where the itemViews will\n   be displayed. Automatically falls back to el if null\n   */\n\nvar ViewCollection = BaseView.extend({\n  itemView: null,\n  views: {},\n  collectionEl: null,\n\n  appendView: function (view) {\n    this.$collectionEl.append(view.el);\n  },\n\n  initialize: function () {\n    BaseView.prototype.initialize.call(this);\n    this.views = {};\n    this.listenTo(this.collection, 'reset', this.onReset);\n    this.listenTo(this.collection, 'add', this.addItem);\n    this.listenTo(this.collection, 'remove', this.removeItem);\n\n    if (this.collectionEl === null || undefined) {\n      this.collectionEl = this.el;\n    }\n  },\n\n  render: function () {\n    for (id in this.views) {\n      this.views[id].$el.detach();\n    }\n    BaseView.prototype.render.call(this);\n    return this;\n  },\n\n  afterRender: function () {\n    this.$collectionEl = $(this.collectionEl);\n    for (id in this.views) {\n      this.appendView(this.views[id]);\n    }\n    this.onReset(this.collection);\n  },\n\n  remove: function () {\n    this.onReset();\n    BaseView.prototype.remove.call(this);\n  },\n\n  onReset: function (newCollection) {\n    for (id in this.views) {\n      view.remove();\n    }\n    newCollection.forEach(this.addItem);\n  },\n\n  addItem: function (model) {\n    view = new this.itemView({model: model});\n    this.views[model.cid] = view.render();\n    this.appendView(view);\n  },\n\n\n  removeItem: function (model) {\n    this.views[model.cid].remove();\n    delete this.views[model.cid];\n  }\n})\n\nmodule.exports = ViewCollection;\n","// Put your handlebars.js helpers here.\n","\n\nvar User = Backbone.Model.extend({\n\tname: null,\n\tdescription: null,\n\thistory: null,\n\n\n});\n\nmodule.exports = User;\n","\nvar HomeView = require('views/home_view');\n\nvar Router = Backbone.Router.extend({\n\n\tmainView: null,\n\n\troutes: {\n\t\t''\t\t: 'mainBoard'\n\t},\n\n\n\tmainBoard: function () {\n\t\tview = new HomeView();\n\n\t\tvar self = this;\n\t\tthis.displayView(view, self);\n\t},\n\n\n\tdisplayView: function (view, self) {\n\t\tif (self.mainView !== null) {\n\t\t\tself.mainView.remove();\n\t\t}\n\t\tself.mainView = view;\n\t\t$('.application').append(view.$el);\n\t\tview.render();\n\t}\n\n\n\n});\n\nmodule.exports = Router;\n","var ViewCollection = require('../lib/view_collection');\nvar template = require('../views/templates/count_user_list');\nvar CountUserRow = require('../models/user');\n\nvar CountUserListView = ViewCollection.extend({\n\tel: '#count-user-list',\n\ttemplate: template,\n\n\tcollectionEl: '#count-user-list-content',\n\titemView: CountUserRow,\n\n});\n\nmodule.exports = CountUserListView;\n","var BaseView = require('../lib/base_view');\nvar template = require('templates/count_user_row');\n\n\nvar CountUserRow = BaseView.extend({\n\ttemplate: template,\n\n});\n","var BaseView = require('../lib/base_view');\nvar template = require('./templates/count');\nvar CountUserListView = require('./count_user_list_view');\nvar CountUserList = require('../collections/user_list');\n\nvar CountView = BaseView.extend({\n\tel: '#content-screen',\n\ttemplate: template,\n\n\tinitialize: function () {\n\t\tthis.listUser = new CountUserList();\n\t\tBaseView.prototype.initialize.call(this);\n\t},\n\n\tafterRender: function () {\n\t\tthis.listUsersView = new CountUserListView();\n\t\tthis.listUsersView.render();\n\t},\n\n});\n\nmodule.exports = CountView;\n\n\n","var BaseView = require('../lib/base_view');\nvar template = require('./templates/home');\nvar CountView = require('./count_view');\nvar app = require('../application');\n\nvar HomeView = BaseView.extend({\n  el: 'body',\n  template: template,\n\n  //events: function () {\n\t  //'click #menu-add-user': 'onAddUser',\n  //},\n\n\n  afterRender: function () {\n\t  //this.countView = new CountView();\n\t  //this.countView.render();\n\t  console.log('test: ', window.test);\n  },\n\n  onAddUser: function () {\n\t  app.allUsers.create();\n  }\n\n\n\n});\n\nmodule.exports = HomeView;\n","module.exports = function anonymous(locals, attrs, escape, rethrow, merge\n/**/) {\nattrs = attrs || jade.attrs; escape = escape || jade.escape; rethrow = rethrow || jade.rethrow; merge = merge || jade.merge;\nvar buf = [];\nwith (locals || {}) {\nvar interp;\nbuf.push('<div id=\"count-user-list\"></div>');\n}\nreturn buf.join(\"\");\n};","module.exports = function anonymous(locals, attrs, escape, rethrow, merge\n/**/) {\nattrs = attrs || jade.attrs; escape = escape || jade.escape; rethrow = rethrow || jade.rethrow; merge = merge || jade.merge;\nvar buf = [];\nwith (locals || {}) {\nvar interp;\nbuf.push('<label for=\"count-menu-users\">Users</label><ul id=\"count-user-list-content\" class=\"list-group\"></ul>');\n}\nreturn buf.join(\"\");\n};","module.exports = function anonymous(locals, attrs, escape, rethrow, merge\n/**/) {\nattrs = attrs || jade.attrs; escape = escape || jade.escape; rethrow = rethrow || jade.rethrow; merge = merge || jade.merge;\nvar buf = [];\nwith (locals || {}) {\nvar interp;\n}\nreturn buf.join(\"\");\n};","module.exports = function anonymous(locals, attrs, escape, rethrow, merge\n/**/) {\nattrs = attrs || jade.attrs; escape = escape || jade.escape; rethrow = rethrow || jade.rethrow; merge = merge || jade.merge;\nvar buf = [];\nwith (locals || {}) {\nvar interp;\nbuf.push('<div class=\"container-fluid\"><div id=\"left-menu\" class=\"sidebar\"><label for=\"menu-section\">Count</label><ul id=\"menu-section\" class=\"nav nav-sidebar\"><li><a id=\"menu-all-count\">All Count</a></li><ul id=\"menu-list-count\"></ul><li><a id=\"menu-add-count\">Create a Count</a></li></ul><label for=\"menu-section\">Users</label><ul id=\"menu-section\" class=\"nav nav-sidebar\"><li><a id=\"menu-all-user\">All User</a></li><ul id=\"menu-list-user\"></ul><li><a id=\"menu-add-user\">Create a User</a></li></ul></div><div id=\"content-screen\" class=\"content container-fluid\"></div></div>');\n}\nreturn buf.join(\"\");\n};"]}