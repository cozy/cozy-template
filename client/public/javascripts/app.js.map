{"version":3,"sources":["app/application.js","app/collections/menu_collection.js","app/initialize.js","app/lib/base_view.js","app/lib/router.js","app/lib/view_collection.js","app/lib/view_helper.js","app/models/menu_model.js","app/views/home_view.js","app/views/menu_list_view.js","app/views/menu_row_view.js","app/views/templates/home.jade","app/views/templates/menu_list.jade","app/views/templates/menu_row.jade"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA5BA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArBA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlBA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjFA;AAAA;ACAA;AAAA;AACA;AADA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApBA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnBA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAAA","file":"public/javascripts/app.js","sourcesContent":["// Application bootstrapper.\nvar Application = {\n  initialize: function () {\n    var HomeView = require('views/home_view'), Router = require('lib/router'),\n      MenuListView = require('views/menu_list_view'),\n      MenuCollection = require('../collections/menu_collection');\n\n    // Ideally, initialized classes should be kept in controllers & mediator.\n    // If you're making big webapp, here's more sophisticated skeleton\n    // https://github.com/paulmillr/brunch-with-chaplin\n    this.homeView = new HomeView();\n    this.homeView.render();\n\n\n    this.menuCollection = new MenuCollection();\n\n    this.menuListView = new MenuListView({collection: this.menuCollection});\n    this.menuListView.render();\n\n    this.router = new Router();\n\n    if (typeof Object.freeze === 'function') {\n      Object.freeze(this);\n    }\n  }\n};\n\nmodule.exports = Application;\n","// Exemple of ViewCollection use\n\nvar MenuModel = require('../models/menu_model');\n\nvar MenuCollection = Backbone.Collection.extend({\n  model: MenuModel,\n  url: 'menu'\n\n  // Add some cool stuff here\n});\n\nmodule.exports = MenuCollection;\n","var application = require('application');\n\n$(function () {\n  application.initialize();\n  Backbone.history.start();\n});\n","require('lib/view_helper');\n\n// Base class for all views.\nvar BaseView = Backbone.View.extend({\n  initialize: function () {\n    this.render = _.bind(this.render, this);\n  },\n\n  template: function () { return null; },\n  getRenderData: function () { return null; },\n\n  render: function () {\n    this.$el.html(this.template(this.getRenderData()));\n    this.afterRender();\n    return this;\n  },\n\n  afterRender: function () { return null; }\n});\n\nmodule.exports = BaseView;\n","var application = require('application');\n\nmodule.exports = Backbone.Router.extend({\n  routes: {\n    '': 'home'\n  },\n\n  home: function () {\n    application.menuCollection.push([\n      {link: \"https://github.com/mycozycloud/cozy-setup/wiki\",\n        name: 'Documentation'},\n      {link: \"https://github.com/mycozycloud/cozy-setup/wiki/Getting-started\",\n        name: 'Getting Started'},\n      {link: \"https://github.com/mycozycloud\", name: 'Github'}\n    ]);\n\n  }\n});\n","\nvar BaseView = require('./base_view');\n\n/*\n   View that display a collection of subitems\n   used to DRY views\n   Usage : new ViewCollection(collection:collection)\n   Automatically populate itself by creating a itemView for each item\n   in its collection\n\n   can use a template that will be displayed alongside the itemViews\n\n   itemView       : the Backbone.View to be used for items\n   itemViewOptions : the options that will be passed to itemViews\n   collectionEl : the DOM element's selector where the itemViews will\n   be displayed. Automatically falls back to el if null\n   */\n\nvar ViewCollection = BaseView.extend({\n  itemView: null,\n  views: {},\n  collectionEl: null,\n\n  appendView: function (view) {\n    this.$collectionEl.append(view.el);\n  },\n\n  initialize: function () {\n    BaseView.prototype.initialize.call(this);\n    this.views = {};\n    this.listenTo(this.collection, 'reset', this.onReset);\n    this.listenTo(this.collection, 'add', this.addItem);\n    this.listenTo(this.collection, 'remove', this.removeItem);\n\n    if (this.collectionEl === null || undefined) {\n      this.collectionEl = this.el;\n    }\n  },\n\n  render: function () {\n    for (id in this.views) {\n      this.views[id].$el.detach();\n    }\n    BaseView.prototype.render.call(this);\n    return this;\n  },\n\n  afterRender: function () {\n    this.$collectionEl = $(this.collectionEl);\n    for (id in this.views) {\n      this.appendView(this.views[id]);\n    }\n    this.onReset(this.collection);\n  },\n\n  remove: function () {\n    this.onReset();\n    BaseView.prototype.remove.call(this);\n  },\n\n  onReset: function (newCollection) {\n    for (id in this.views) {\n      view.remove();\n    }\n    newCollection.forEach(this.addItem);\n  },\n\n  addItem: function (model) {\n    view = new this.itemView({model: model});\n    this.views[model.cid] = view.render();\n    this.appendView(view);\n  },\n\n\n  removeItem: function (model) {\n    this.views[model.cid].remove();\n    delete this.views[model.cid];\n  }\n})\n\nmodule.exports = ViewCollection;\n","// Put your handlebars.js helpers here.\n","\nvar MenuModel = Backbone.Model.extend({\n  link: null,\n  name: null,\n\n  // Add some cool stuff here\n});\n\nmodule.exports = MenuModel;\n","var BaseView = require('../lib/base_view');\nvar template = require('./templates/home');\n\nvar HomeView = BaseView.extend({\n  el: 'body',\n  template: template\n});\n\nmodule.exports = HomeView;\n","// Exemple use ViewCollection\n\nvar ViewCollection = require('../lib/view_collection');\nvar MenuRowView = require('./menu_row_view');\nvar template = require('./templates/menu_list');\n\nvar MenuListView = ViewCollection.extend({\n  el: '#menu',\n  template: template,\n\n  collectionEl: 'ul#menu-collection',\n  itemView: MenuRowView,\n\n  initialize: function (attributes) {\n    this.collection = attributes.collection;\n    ViewCollection.prototype.initialize.call(this);\n  }\n});\n\nmodule.exports = MenuListView;\n","// Exemple use ViewCollection\n\nvar BaseView = require('../lib/base_view');\nvar template = require('./templates/menu_row');\n\nvar MenuRowView = BaseView.extend({\n  template: template,\n\n  className: 'menu-element',\n  tagName: 'li',\n\n  getRenderData: function () {\n    return {model: this.model.toJSON()};\n  }\n\n  // Add some cool stuff here\n});\n\nmodule.exports = MenuRowView;\n","module.exports = function anonymous(locals, attrs, escape, rethrow, merge\n/**/) {\nattrs = attrs || jade.attrs; escape = escape || jade.escape; rethrow = rethrow || jade.rethrow; merge = merge || jade.merge;\nvar buf = [];\nwith (locals || {}) {\nvar interp;\nbuf.push('<div id=\"content\"><h1>Cozy template</h1><h2>Welcome</h2><div id=\"menu\"></div></div>');\n}\nreturn buf.join(\"\");\n};","module.exports = function anonymous(locals, attrs, escape, rethrow, merge\n/**/) {\nattrs = attrs || jade.attrs; escape = escape || jade.escape; rethrow = rethrow || jade.rethrow; merge = merge || jade.merge;\nvar buf = [];\nwith (locals || {}) {\nvar interp;\nbuf.push('<p>Menu</p><ul id=\"menu-collection\"></ul>');\n}\nreturn buf.join(\"\");\n};","module.exports = function anonymous(locals, attrs, escape, rethrow, merge\n/**/) {\nattrs = attrs || jade.attrs; escape = escape || jade.escape; rethrow = rethrow || jade.rethrow; merge = merge || jade.merge;\nvar buf = [];\nwith (locals || {}) {\nvar interp;\nbuf.push('<a');\nbuf.push(attrs({ 'href':(\"\" + (model.link) + \"\") }, {\"href\":true}));\nbuf.push('>' + escape((interp = model.name) == null ? '' : interp) + '</a>');\n}\nreturn buf.join(\"\");\n};"]}